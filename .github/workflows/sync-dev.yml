# .github/workflows/sync-dev.yml
name: Sync dev with main
on:
  push:
    branches:
      - main  # main 分支有推送时触发

# 添加明确的权限配置
permissions:
  contents: write
  issues: write  # 添加创建 issue 的权限

jobs:
  sync-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 代码
        uses: actions/checkout@v4
        with:
          ref: dev  # 直接拉取 dev 分支
          fetch-depth: 0  # 获取完整历史以便更好地合并

      - name: 合并 main 到 dev
        id: merge  # 添加 ID 以供后续步骤引用
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git fetch origin main
          
          # 尝试合并，如有冲突则中止并创建报告
          if ! git merge origin/main --no-edit; then
            echo "CONFLICT=true" >> $GITHUB_OUTPUT
            git diff --name-only --diff-filter=U > conflict_files.txt
            git merge --abort  # 使用 merge --abort 代替 reset --hard
            exit 0  # 不中断工作流，继续创建 issue
          fi
          
          git push origin dev
          echo "CONFLICT=false" >> $GITHUB_OUTPUT

      - name: 创建合并冲突 Issue
        if: steps.merge.outputs.CONFLICT == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const conflictFiles = fs.readFileSync('conflict_files.txt', 'utf8').trim().split('\n');
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'main 到 dev 的合并冲突',
              body: `
              ## 合并冲突需要解决
            
              在尝试将 main 合并到 dev 分支时发生了冲突。
            
              ### 冲突文件：
              ${conflictFiles.map(file => `- ${file}`).join('\n')}
            
              请手动解决这些冲突。
              `
            });

